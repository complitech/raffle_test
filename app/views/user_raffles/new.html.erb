<div class="container">
  <h2>Sign up for Raffle!</h2>
  <% if flash[:notice].present? %>
    <div class="alert alert-success">
      <strong><%= flash[:notice] %></strong>
    </div>
  <% end %>
  <% if flash[:alert].present? %>
    <div class="alert alert-danger">
      <strong><%= flash[:alert] %></strong>
    </div>
  <% end %>
  <form action="<%= user_raffles_path %>" method="POST" class="sign-up-form">
    <div class="form-group">
      <label for="email">Enter Email:</label>
      <input type="email" class="form-control" id="email" placeholder="Enter email" name="email">
    </div>
    <div class="form-group">
      <label for="raffle">Choose Raffle:</label>
      <select name="raffle" class="form-control" id="raffle" placeholder="Select raffle">
        <% if @raffles.present? %>
          <% @raffles.each do |raffle| %>
            <option value="<%= raffle.try(:id) %>"><%= raffle.try(:name) %></option>
          <% end %>
        <% end %>
      </select>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
  </form>
</div>
<script type="text/javascript">
  $(".sign-up-form").validate({
     ignore: 'input[type=hidden], .select2-search__field', // ignore hidden fields
     errorClass: 'validation-invalid-label',
     successClass: 'validation-valid-label',
     highlight: function(element, errorClass) {
         $(element).removeClass(errorClass);
     },
     unhighlight: function(element, errorClass) {
         $(element).removeClass(errorClass);
     },
     // Different components require proper error label placement
     errorPlacement: function(error, element) {
       // Styled checkboxes, radios, bootstrap switch
       if (element.parents('div').hasClass("checker") || element.parents('div').hasClass("choice") || element.parent().hasClass('bootstrap-switch-container') ) {
           if(element.parents('label').hasClass('checkbox-inline') || element.parents('label').hasClass('radio-inline')) {
               error.appendTo( element.parent().parent().parent().parent() );
           }
            else {
               error.appendTo( element.parent().parent().parent().parent().parent() );
           }
       }
  
       // Unstyled checkboxes, radios
       else if (element.parents('div').hasClass('checkbox') || element.parents('div').hasClass('radio')) {
           error.appendTo( element.parent().parent().parent() );
       }
  
       // Input with icons and Select2
       else if (element.parents('div').hasClass('has-feedback') || element.hasClass('select2-hidden-accessible')) {
           error.appendTo( element.parent() );
       }
  
       // Inline checkboxes, radios
       else if (element.parents('label').hasClass('checkbox-inline') || element.parents('label').hasClass('radio-inline')) {
           error.appendTo( element.parent().parent() );
       }
  
       // Input group, styled file input
       else if (element.parent().hasClass('uploader') || element.parents().hasClass('input-group')) {
           error.appendTo( element.parent().parent() );
       }
  
       else {
           error.insertAfter(element);
       }
     },
     validClass: "validation-valid-label",
     rules: {
       "email": {
         required: true,
         email: true,
       },
     },
     messages: {
       "email": {
         required: "Email is required.",
       },
     }
  });
</script>